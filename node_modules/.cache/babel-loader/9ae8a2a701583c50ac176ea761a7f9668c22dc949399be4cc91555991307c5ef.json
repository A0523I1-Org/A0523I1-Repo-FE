{"ast":null,"code":"import { useRef } from 'react';\nimport { useIsomorphicLayoutEffect } from '../helpers/react.js';\nimport { getWidth } from '../helpers/style.js';\nimport { flushSync } from 'react-dom';\nexport function useFoutDetector(getElements, handleFout) {\n  const containerRef = useRef(null);\n  useIsomorphicLayoutEffect(() => {\n    const elements = getElements(containerRef.current);\n    if (!elements) return;\n    const widthsAtRender = new Map(elements.map(element => [element, getWidth(element)]));\n    const resizeObserver = new ResizeObserver(entries => {\n      const hasAnElementChangedSignificantly = entries.map(entry => widthsAtRender.get(entry.target) - getWidth(entry.target)).some(difference => difference < -0.5 || difference > 0.5);\n      hasAnElementChangedSignificantly && flushSync(handleFout);\n    });\n    elements.forEach(element => resizeObserver.observe(element));\n    return () => resizeObserver.disconnect();\n  });\n  return containerRef;\n}","map":{"version":3,"names":["useRef","useIsomorphicLayoutEffect","getWidth","flushSync","useFoutDetector","getElements","handleFout","containerRef","elements","current","widthsAtRender","Map","map","element","resizeObserver","ResizeObserver","entries","hasAnElementChangedSignificantly","entry","get","target","some","difference","forEach","observe","disconnect"],"sources":["D:/Code_Gym/Data GitHub/final_module/Developer/A0523I1-Repo-FE/node_modules/react-responsive-pagination/dist/hooks/useFoutDetector.js"],"sourcesContent":["import { useRef } from 'react';\nimport { useIsomorphicLayoutEffect } from '../helpers/react.js';\nimport { getWidth } from '../helpers/style.js';\nimport { flushSync } from 'react-dom';\nexport function useFoutDetector(getElements, handleFout) {\n    const containerRef = useRef(null);\n    useIsomorphicLayoutEffect(() => {\n        const elements = getElements(containerRef.current);\n        if (!elements)\n            return;\n        const widthsAtRender = new Map(elements.map(element => [element, getWidth(element)]));\n        const resizeObserver = new ResizeObserver(entries => {\n            const hasAnElementChangedSignificantly = entries\n                .map(entry => widthsAtRender.get(entry.target) - getWidth(entry.target))\n                .some(difference => difference < -0.5 || difference > 0.5);\n            hasAnElementChangedSignificantly && flushSync(handleFout);\n        });\n        elements.forEach(element => resizeObserver.observe(element));\n        return () => resizeObserver.disconnect();\n    });\n    return containerRef;\n}\n"],"mappings":"AAAA,SAASA,MAAM,QAAQ,OAAO;AAC9B,SAASC,yBAAyB,QAAQ,qBAAqB;AAC/D,SAASC,QAAQ,QAAQ,qBAAqB;AAC9C,SAASC,SAAS,QAAQ,WAAW;AACrC,OAAO,SAASC,eAAeA,CAACC,WAAW,EAAEC,UAAU,EAAE;EACrD,MAAMC,YAAY,GAAGP,MAAM,CAAC,IAAI,CAAC;EACjCC,yBAAyB,CAAC,MAAM;IAC5B,MAAMO,QAAQ,GAAGH,WAAW,CAACE,YAAY,CAACE,OAAO,CAAC;IAClD,IAAI,CAACD,QAAQ,EACT;IACJ,MAAME,cAAc,GAAG,IAAIC,GAAG,CAACH,QAAQ,CAACI,GAAG,CAACC,OAAO,IAAI,CAACA,OAAO,EAAEX,QAAQ,CAACW,OAAO,CAAC,CAAC,CAAC,CAAC;IACrF,MAAMC,cAAc,GAAG,IAAIC,cAAc,CAACC,OAAO,IAAI;MACjD,MAAMC,gCAAgC,GAAGD,OAAO,CAC3CJ,GAAG,CAACM,KAAK,IAAIR,cAAc,CAACS,GAAG,CAACD,KAAK,CAACE,MAAM,CAAC,GAAGlB,QAAQ,CAACgB,KAAK,CAACE,MAAM,CAAC,CAAC,CACvEC,IAAI,CAACC,UAAU,IAAIA,UAAU,GAAG,CAAC,GAAG,IAAIA,UAAU,GAAG,GAAG,CAAC;MAC9DL,gCAAgC,IAAId,SAAS,CAACG,UAAU,CAAC;IAC7D,CAAC,CAAC;IACFE,QAAQ,CAACe,OAAO,CAACV,OAAO,IAAIC,cAAc,CAACU,OAAO,CAACX,OAAO,CAAC,CAAC;IAC5D,OAAO,MAAMC,cAAc,CAACW,UAAU,CAAC,CAAC;EAC5C,CAAC,CAAC;EACF,OAAOlB,YAAY;AACvB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}