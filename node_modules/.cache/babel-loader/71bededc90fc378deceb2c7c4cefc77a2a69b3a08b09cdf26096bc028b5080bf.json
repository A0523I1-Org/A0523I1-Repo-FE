{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState } from \"react\";\n// import * as customerService from \"../../services/CustomerService\";\nimport * as customerService from \"../../services/CustomerService\";\nimport * as authService from '../../services/Authenticate/AuthService.js';\nimport { toast } from \"react-toastify\";\nconst PopUpDelete = (setCustomers, setTotalCustomers, token) => {\n  _s();\n  const [showPopup, setShowPopup] = useState(false);\n  const [selectedIds, setSelectedIds] = useState([]);\n  const [popupAction, setPopupAction] = useState(null);\n  const [deleteId, setDeleteId] = useState(null);\n  const handleDelete = id => {\n    setPopupAction(\"single\");\n    setDeleteId(id);\n    setShowPopup(true);\n  };\n  const toggleSelect = id => {\n    setSelectedIds(prev => prev.includes(id) ? prev.filter(i => i !== id) : [...prev, id]);\n  };\n  const handleDeleteIds = () => {\n    setPopupAction(\"multiple\");\n    setShowPopup(true);\n  };\n  const confirmDelete = async () => {\n    setShowPopup(false);\n    const token = authService.getToken();\n    if (!token) {\n      console.log(\"No token found. Please log in.\");\n      return;\n    }\n    try {\n      if (popupAction === \"single\") {\n        await customerService.deleteCustomer(deleteId, token);\n        setCustomers(prevCustomers => prevCustomers.filter(customer => customer.id !== deleteId));\n        setTotalCustomers(prevTotal => prevTotal - 1);\n        toast.success(\"Xóa khách hàng thành công\", {\n          autoClose: 2000\n        });\n      } else if (popupAction === \"multiple\") {\n        await customerService.deleteCustomers(selectedIds, token);\n        setCustomers(prevCustomers => prevCustomers.filter(customer => !selectedIds.includes(customer.id)));\n        setTotalCustomers(prevTotal => prevTotal - selectedIds.length);\n        setSelectedIds([]);\n        toast.success(\"Xóa khách hàng thành công\", {\n          autoClose: 2000\n        });\n      }\n    } catch (error) {\n      console.error(\"Error\", error);\n    }\n  };\n  const cancelDelete = () => {\n    setShowPopup(false);\n  };\n  return {\n    handleDelete,\n    confirmDelete,\n    selectedIds,\n    deleteIds: selectedIds,\n    handleDeleteIds,\n    setSelectedIds,\n    cancelDelete,\n    toggleSelect,\n    showPopup\n  };\n};\n_s(PopUpDelete, \"MXR1RO2jj7lxyN0bcztn4oBC/xM=\");\n_c = PopUpDelete;\nexport default PopUpDelete;\nvar _c;\n$RefreshReg$(_c, \"PopUpDelete\");","map":{"version":3,"names":["useState","customerService","authService","toast","PopUpDelete","setCustomers","setTotalCustomers","token","_s","showPopup","setShowPopup","selectedIds","setSelectedIds","popupAction","setPopupAction","deleteId","setDeleteId","handleDelete","id","toggleSelect","prev","includes","filter","i","handleDeleteIds","confirmDelete","getToken","console","log","deleteCustomer","prevCustomers","customer","prevTotal","success","autoClose","deleteCustomers","length","error","cancelDelete","deleteIds","_c","$RefreshReg$"],"sources":["D:/Code_Gym/Data GitHub/final_module/Developer/A0523I1-Repo-FE/src/components/customer/PopUpDelete.js"],"sourcesContent":["import { useState } from \"react\";\r\n// import * as customerService from \"../../services/CustomerService\";\r\nimport * as customerService from \"../../services/CustomerService\";\r\nimport * as authService from '../../services/Authenticate/AuthService.js'\r\nimport {toast} from \"react-toastify\";\r\n\r\n\r\n\r\n\r\nconst PopUpDelete = (setCustomers, setTotalCustomers, token) => {\r\n    const [showPopup, setShowPopup] = useState(false);\r\n    const [selectedIds, setSelectedIds] = useState([]);\r\n    const [popupAction, setPopupAction] = useState(null);\r\n    const [deleteId, setDeleteId] = useState(null);\r\n\r\n    const handleDelete = (id) => {\r\n        setPopupAction(\"single\");\r\n        setDeleteId(id);\r\n        setShowPopup(true);\r\n    };\r\n\r\n    const toggleSelect = (id) => {\r\n        setSelectedIds((prev) =>\r\n            prev.includes(id) ? prev.filter((i) => i !== id) : [...prev, id]\r\n        );\r\n    };\r\n\r\n    const handleDeleteIds = () => {\r\n        setPopupAction(\"multiple\");\r\n        setShowPopup(true);\r\n    };\r\n\r\n    const confirmDelete = async () => {\r\n        setShowPopup(false);\r\n        const token = authService.getToken();\r\n        if (!token) {\r\n            console.log(\"No token found. Please log in.\");\r\n            return;\r\n        }\r\n        try {\r\n            if (popupAction === \"single\") {\r\n                await customerService.deleteCustomer(deleteId, token);\r\n                setCustomers((prevCustomers) =>\r\n                    prevCustomers.filter((customer) => customer.id !== deleteId)\r\n                );\r\n                setTotalCustomers((prevTotal) => prevTotal - 1);\r\n                toast.success(\"Xóa khách hàng thành công\", {\r\n                    autoClose: 2000,\r\n                });\r\n            } else if (popupAction === \"multiple\") {\r\n                await customerService.deleteCustomers(selectedIds, token);\r\n                setCustomers((prevCustomers) =>\r\n                    prevCustomers.filter((customer) => !selectedIds.includes(customer.id))\r\n                );\r\n                setTotalCustomers((prevTotal) => prevTotal - selectedIds.length);\r\n                setSelectedIds([]);\r\n                toast.success(\"Xóa khách hàng thành công\", {\r\n                    autoClose: 2000,\r\n                });\r\n            }\r\n        } catch (error) {\r\n            console.error(\"Error\", error);\r\n        }\r\n    };\r\n\r\n    const cancelDelete = () => {\r\n        setShowPopup(false);\r\n    };\r\n\r\n    return {\r\n        handleDelete,\r\n        confirmDelete,\r\n        selectedIds,\r\n        deleteIds: selectedIds,\r\n        handleDeleteIds,\r\n        setSelectedIds,\r\n        cancelDelete,\r\n        toggleSelect,\r\n        showPopup,\r\n    };\r\n};\r\n\r\nexport default PopUpDelete;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}