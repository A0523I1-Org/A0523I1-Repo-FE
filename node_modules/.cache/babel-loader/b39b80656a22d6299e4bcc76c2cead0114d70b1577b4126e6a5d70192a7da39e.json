{"ast":null,"code":"// import React, { useState, useEffect } from \"react\";\n// import { RiUserLine, RiLockLine, RiEyeOffLine, RiEyeLine, RiFacebookLine, RiGoogleLine } from 'react-icons/ri';\n// import '../../css/auth/login.css'; // Import your custom CSS\n// import Modal from \"react-modal\";\n// import {ErrorMessage, Field, Form, Formik} from \"formik\";\n// import * as Yup from \"yup\"\n// import * as accountService from \"../../services/AccountService\";\n// import {useNavigate} from \"react-router\";\n//\n// function Login() {\n//     const [loginModalIsOpen, setLoginModalIsOpen] = useState(false)\n//     const [passwordVisible, setPasswordVisible] = useState(false)\n//     const [error, setError] = useState('')\n//     const [account, setAccount] = useState({username:\"\", password:\"\"});\n//     const navigate = useNavigate()\n//\n//     const validateAccount = {\n//         username : Yup.string().required(\"Vui lòng điền tên đăng nhập.\").min(2).max(1000),\n//         password : Yup.string().required(\"Vui lòng điền tên mật khẩu.\").min(2).max(1000)\n//     }\n//\n//     // HANDLE DISPLAY FORM\n//     useEffect(() => {\n//         // console.log(account);\n//         const handleModalOpen = () => {\n//             setLoginModalIsOpen(true);\n//             setTimeout(() => {\n//                 const inputs = document.querySelectorAll(\".form__input\");\n//                 if (inputs.length > 0) {\n//                     addEventListeners(inputs);\n//                 }\n//             }, 100);\n//         };\n//\n//         const addEventListeners = (inputs) => {\n//             const addFocus = (event) => {\n//                 let parent = event.target.parentNode.parentNode;\n//                 parent.classList.add(\"focus\");\n//             };\n//\n//             const removeFocus = (event) => {\n//                 let parent = event.target.parentNode.parentNode;\n//                 if (event.target.value === \"\") {\n//                     parent.classList.remove(\"focus\");\n//                 }\n//             };\n//\n//             inputs.forEach(input => {\n//                 input.addEventListener(\"focus\", addFocus);\n//                 input.addEventListener(\"blur\", removeFocus);\n//             });\n//\n//             return () => {\n//                 inputs.forEach(input => {\n//                     input.removeEventListener(\"focus\", addFocus);\n//                     input.removeEventListener(\"blur\", removeFocus);\n//                 });\n//             };\n//         };\n//\n//         document.getElementById(\"open-login-modal\").addEventListener(\"click\", handleModalOpen);\n//\n//         // return () => {\n//         //     document.getElementById(\"open-login-modal\").removeEventListener(\"click\", handleModalOpen);\n//         // };\n//     }, [loginModalIsOpen]);\n//\n//     const togglePasswordVisibility = () => {\n//         setPasswordVisible(!passwordVisible);\n//     };\n//\n//     const openLoginModal = () => {\n//         setLoginModalIsOpen(true);\n//     };\n//\n//     useEffect(() => {\n//             if(localStorage.token) {\n//                     navigate('/employee/personal-information')\n//             }\n//     }, [])\n//\n//     // LOGIN\n//     const login = async (account) => {\n//         try {\n//             const userData = await accountService.login(account.username, account.password)\n//             console.log(userData)\n//             if (userData.access_token) {\n//                 localStorage.setItem('token', userData.access_token)\n//                 localStorage.setItem('role', userData.roles)\n//                 navigate('/employee/personal-information')\n//             }else{\n//                 setError(userData.message)\n//             }\n//\n//         } catch (error) {\n//             setError(\"Đăng nhập thất bại.\")\n//         }\n//     }\n//\n//     return (\n//         <>\n//             <button id=\"open-login-modal\" className=\"btn btn-danger\" onClick={openLoginModal}>Đăng nhập</button>\n//\n//             <Modal\n//                 appElement={document.getElementById('root')}\n//                 isOpen={loginModalIsOpen}\n//                 onRequestClose={() => setLoginModalIsOpen(false)}\n//                 className=\"modal-content\"\n//             >\n//                 <Formik initialValues={account}\n//                         onSubmit={login}\n//                         validationSchema={Yup.object(validateAccount)}>\n//\n//                 <div className=\"l-form\">\n//                     <div className=\"shape1\"/>\n//                     <div className=\"shape2\"/>\n//\n//                     <div className=\"form\">\n//                         <Form className=\"form__content\">\n//                             <h1 className=\"form__title\">Đăng nhập</h1>\n//\n//                             <div className=\"form__div form__div-one\">\n//\n//                                 {error && <div className=\"login__fail_message\">{error}</div>}\n//\n//                                 <div className=\"form__icon\">\n//                                     <RiUserLine />\n//                                 </div>\n//                                 <div className=\"form__div-input\">\n//                                     <label htmlFor=\"\" className=\"form__label\">Tên đăng nhập</label>\n//                                     <Field type=\"text\" className=\"form__input\" name=\"username\"/>\n//                                     <ErrorMessage className=\"error__message\" name=\"username\" component=\"div\"/>\n//                                 </div>\n//                             </div>\n//\n//                             <div className=\"form__div\">\n//                                 <div className=\"form__icon\">\n//                                     <RiLockLine />\n//                                 </div>\n//                                 <div className=\"form__div-input\">\n//                                     <label htmlFor=\"\" className=\"form__label\">Mật khẩu</label>\n//                                     <Field type={passwordVisible ? \"text\" : \"password\"} className=\"form__input\" id=\"password\" name=\"password\"/>\n//                                     <div className=\"form__icon login__eye\" onClick={togglePasswordVisibility}>\n//                                         {passwordVisible ? <RiEyeLine /> : <RiEyeOffLine />}\n//                                     </div>\n//                                     <ErrorMessage className=\"error__message\" name=\"password\" component=\"div\"/>\n//                                 </div>\n//                             </div>\n//\n//                             <div className=\"form__check\">\n//                                 <div className=\"form__remember\">\n//                                     <label htmlFor=\"remember-me\">\n//                                          <input type=\"checkbox\" id=\"remember-me\" name=\"remember-me\"/>\n//                                         Ghi nhớ tôi\n//                                     </label>\n//                                 </div>\n//                                 {/*<a href=\"#\" className=\"form__forgot\">Quên mật khẩu?</a>*/}\n//                             </div>\n//\n//                             <button type=\"submit\" className=\"form__button\">ĐĂNG NHẬP</button>\n//\n//                             {/*<div className=\"form__social\">*/}\n//                             {/*    <span className=\"form__social-text\">Hoặc đăng nhập với</span>*/}\n//                             {/*    <a href=\"#\" className=\"form__social-icon\"><RiFacebookLine /></a>*/}\n//                             {/*    <a href=\"#\" className=\"form__social-icon\"><RiGoogleLine /></a>*/}\n//                             {/*</div>*/}\n//                         </Form>\n//                     </div>\n//                 </div>\n//\n//                 </Formik>\n//             </Modal>\n//         </>\n//     );\n// }\n//\n// export default Login;","map":{"version":3,"names":[],"sources":["D:/Code_Gym/Data GitHub/final_module/Developer/A0523I1-Repo-FE/src/components/auth/Login.js"],"sourcesContent":["// import React, { useState, useEffect } from \"react\";\r\n// import { RiUserLine, RiLockLine, RiEyeOffLine, RiEyeLine, RiFacebookLine, RiGoogleLine } from 'react-icons/ri';\r\n// import '../../css/auth/login.css'; // Import your custom CSS\r\n// import Modal from \"react-modal\";\r\n// import {ErrorMessage, Field, Form, Formik} from \"formik\";\r\n// import * as Yup from \"yup\"\r\n// import * as accountService from \"../../services/AccountService\";\r\n// import {useNavigate} from \"react-router\";\r\n//\r\n// function Login() {\r\n//     const [loginModalIsOpen, setLoginModalIsOpen] = useState(false)\r\n//     const [passwordVisible, setPasswordVisible] = useState(false)\r\n//     const [error, setError] = useState('')\r\n//     const [account, setAccount] = useState({username:\"\", password:\"\"});\r\n//     const navigate = useNavigate()\r\n//\r\n//     const validateAccount = {\r\n//         username : Yup.string().required(\"Vui lòng điền tên đăng nhập.\").min(2).max(1000),\r\n//         password : Yup.string().required(\"Vui lòng điền tên mật khẩu.\").min(2).max(1000)\r\n//     }\r\n//\r\n//     // HANDLE DISPLAY FORM\r\n//     useEffect(() => {\r\n//         // console.log(account);\r\n//         const handleModalOpen = () => {\r\n//             setLoginModalIsOpen(true);\r\n//             setTimeout(() => {\r\n//                 const inputs = document.querySelectorAll(\".form__input\");\r\n//                 if (inputs.length > 0) {\r\n//                     addEventListeners(inputs);\r\n//                 }\r\n//             }, 100);\r\n//         };\r\n//\r\n//         const addEventListeners = (inputs) => {\r\n//             const addFocus = (event) => {\r\n//                 let parent = event.target.parentNode.parentNode;\r\n//                 parent.classList.add(\"focus\");\r\n//             };\r\n//\r\n//             const removeFocus = (event) => {\r\n//                 let parent = event.target.parentNode.parentNode;\r\n//                 if (event.target.value === \"\") {\r\n//                     parent.classList.remove(\"focus\");\r\n//                 }\r\n//             };\r\n//\r\n//             inputs.forEach(input => {\r\n//                 input.addEventListener(\"focus\", addFocus);\r\n//                 input.addEventListener(\"blur\", removeFocus);\r\n//             });\r\n//\r\n//             return () => {\r\n//                 inputs.forEach(input => {\r\n//                     input.removeEventListener(\"focus\", addFocus);\r\n//                     input.removeEventListener(\"blur\", removeFocus);\r\n//                 });\r\n//             };\r\n//         };\r\n//\r\n//         document.getElementById(\"open-login-modal\").addEventListener(\"click\", handleModalOpen);\r\n//\r\n//         // return () => {\r\n//         //     document.getElementById(\"open-login-modal\").removeEventListener(\"click\", handleModalOpen);\r\n//         // };\r\n//     }, [loginModalIsOpen]);\r\n//\r\n//     const togglePasswordVisibility = () => {\r\n//         setPasswordVisible(!passwordVisible);\r\n//     };\r\n//\r\n//     const openLoginModal = () => {\r\n//         setLoginModalIsOpen(true);\r\n//     };\r\n//\r\n//     useEffect(() => {\r\n//             if(localStorage.token) {\r\n//                     navigate('/employee/personal-information')\r\n//             }\r\n//     }, [])\r\n//\r\n//     // LOGIN\r\n//     const login = async (account) => {\r\n//         try {\r\n//             const userData = await accountService.login(account.username, account.password)\r\n//             console.log(userData)\r\n//             if (userData.access_token) {\r\n//                 localStorage.setItem('token', userData.access_token)\r\n//                 localStorage.setItem('role', userData.roles)\r\n//                 navigate('/employee/personal-information')\r\n//             }else{\r\n//                 setError(userData.message)\r\n//             }\r\n//\r\n//         } catch (error) {\r\n//             setError(\"Đăng nhập thất bại.\")\r\n//         }\r\n//     }\r\n//\r\n//     return (\r\n//         <>\r\n//             <button id=\"open-login-modal\" className=\"btn btn-danger\" onClick={openLoginModal}>Đăng nhập</button>\r\n//\r\n//             <Modal\r\n//                 appElement={document.getElementById('root')}\r\n//                 isOpen={loginModalIsOpen}\r\n//                 onRequestClose={() => setLoginModalIsOpen(false)}\r\n//                 className=\"modal-content\"\r\n//             >\r\n//                 <Formik initialValues={account}\r\n//                         onSubmit={login}\r\n//                         validationSchema={Yup.object(validateAccount)}>\r\n//\r\n//                 <div className=\"l-form\">\r\n//                     <div className=\"shape1\"/>\r\n//                     <div className=\"shape2\"/>\r\n//\r\n//                     <div className=\"form\">\r\n//                         <Form className=\"form__content\">\r\n//                             <h1 className=\"form__title\">Đăng nhập</h1>\r\n//\r\n//                             <div className=\"form__div form__div-one\">\r\n//\r\n//                                 {error && <div className=\"login__fail_message\">{error}</div>}\r\n//\r\n//                                 <div className=\"form__icon\">\r\n//                                     <RiUserLine />\r\n//                                 </div>\r\n//                                 <div className=\"form__div-input\">\r\n//                                     <label htmlFor=\"\" className=\"form__label\">Tên đăng nhập</label>\r\n//                                     <Field type=\"text\" className=\"form__input\" name=\"username\"/>\r\n//                                     <ErrorMessage className=\"error__message\" name=\"username\" component=\"div\"/>\r\n//                                 </div>\r\n//                             </div>\r\n//\r\n//                             <div className=\"form__div\">\r\n//                                 <div className=\"form__icon\">\r\n//                                     <RiLockLine />\r\n//                                 </div>\r\n//                                 <div className=\"form__div-input\">\r\n//                                     <label htmlFor=\"\" className=\"form__label\">Mật khẩu</label>\r\n//                                     <Field type={passwordVisible ? \"text\" : \"password\"} className=\"form__input\" id=\"password\" name=\"password\"/>\r\n//                                     <div className=\"form__icon login__eye\" onClick={togglePasswordVisibility}>\r\n//                                         {passwordVisible ? <RiEyeLine /> : <RiEyeOffLine />}\r\n//                                     </div>\r\n//                                     <ErrorMessage className=\"error__message\" name=\"password\" component=\"div\"/>\r\n//                                 </div>\r\n//                             </div>\r\n//\r\n//                             <div className=\"form__check\">\r\n//                                 <div className=\"form__remember\">\r\n//                                     <label htmlFor=\"remember-me\">\r\n//                                          <input type=\"checkbox\" id=\"remember-me\" name=\"remember-me\"/>\r\n//                                         Ghi nhớ tôi\r\n//                                     </label>\r\n//                                 </div>\r\n//                                 {/*<a href=\"#\" className=\"form__forgot\">Quên mật khẩu?</a>*/}\r\n//                             </div>\r\n//\r\n//                             <button type=\"submit\" className=\"form__button\">ĐĂNG NHẬP</button>\r\n//\r\n//                             {/*<div className=\"form__social\">*/}\r\n//                             {/*    <span className=\"form__social-text\">Hoặc đăng nhập với</span>*/}\r\n//                             {/*    <a href=\"#\" className=\"form__social-icon\"><RiFacebookLine /></a>*/}\r\n//                             {/*    <a href=\"#\" className=\"form__social-icon\"><RiGoogleLine /></a>*/}\r\n//                             {/*</div>*/}\r\n//                         </Form>\r\n//                     </div>\r\n//                 </div>\r\n//\r\n//                 </Formik>\r\n//             </Modal>\r\n//         </>\r\n//     );\r\n// }\r\n//\r\n// export default Login;\r\n"],"mappingsignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}